@page "/samples/lotto-quick-pick"
<h3>Lotto Quick Pick</h3>

<p>This Blazor Component allows you to generate quick pick numbers for Lotto 6/49 or Lotto MAX.</p>

@if (QuickPickNumbers.Count > 0)
{
	<p>Your quick pick numbers are:</p>
	<table class="table table-striped text-center">
		<thead>
			<tr class="table-info">
				@for (int num = 1; num <= QuickPickNumbers.Count; num += 1)
				{
					<th>Num @num</th>
				}
			</tr>
		</thead>
		<tbody>
			<tr>
				@foreach (var num in QuickPickNumbers)
				{
					<td>@num</td>
				}
			</tr>
		</tbody>
	</table>
}

@*
	A lambda function is used to set the lotto type inline
	For 'checked' attributes, Blazor will only render boolean attributes
	if the value is true (smart!).
*@
<fieldset>
	<p>Select lotto type:</p>
	<div class="form-check">
		<input class="form-check-input" id="lotto649" name="lottoType" type="radio" value="649"
			   checked="@(LottoType == "649")"
			   @onclick="@(() => LottoType = "649")" />
		<label class="form-check-label" for="lotto649">Lotto 6/49</label>
	</div>
	<div class="form-check">
		<input class="form-check-input" id="lottoMAX" name="lottoType" type="radio" value="MAX"
			   checked="@(LottoType == "MAX")"
			   @onclick="@(() => LottoType = "MAX")" />
		<label class="form-check-label" for="lottoMAX">Lotto MAX</label>
	</div>
	<div class="mt-3">
		<button class="btn btn-primary" @onclick="@GenerateQuickPick">Generate Quick Pick</button>
	</div>
</fieldset>

@code {
	private string LottoType { get; set; } = "MAX";
	// Shortcut new() to instantiate
	// https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/operators/new-operator
	private List<int> QuickPickNumbers { get; set; } = new();

	private void GenerateQuickPick()
	{
		// The max lotto number for LottoMAX is 50 whereas it is 49 for Lotto6/49
		int maxLottoNumber = LottoType == "MAX" ? 50 : 49;
		// LottoMAX selects 7 numbers whereas Lotto6/49 selects 6 numbers
		int lottoSelections = LottoType == "MAX" ? 7 : 6;

		// Clear previous generated numbers
		QuickPickNumbers.Clear();

		// Generate the random numbers
		while (QuickPickNumbers.Count < lottoSelections)
		{
			int randomNumber = Random.Shared.Next(1, maxLottoNumber);
			// Add the randomNumber only if it is unique
			if (!QuickPickNumbers.Contains(randomNumber))
			{
				QuickPickNumbers.Add(randomNumber);
			}
		}
		// Sort the numbers
		QuickPickNumbers.Sort();
	}
}
